{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aksha\\\\Desktop\\\\Explore India\\\\frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$();\n// Import necessary modules\nimport React, { createContext, useEffect, useReducer } from \"react\";\nimport axios from \"axios\";\nimport { BASE_URL } from \"../utils/config\";\n\n// Set up Axios instance\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst instance = axios.create({\n  baseURL: `${BASE_URL}/a`,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Function to set authorization header with token\nconst setAuthToken = token => {\n  if (token) {\n    instance.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n  } else {\n    delete instance.defaults.headers.common['Authorization'];\n  }\n};\n\n// Retrieve token from localStorage and set it to axios headers\nconst token = localStorage.getItem('accessToken');\nif (token) {\n  setAuthToken(token);\n}\n\n// Other constants and variables\nlet user;\ntry {\n  user = JSON.parse(localStorage.getItem(\"user\"));\n} catch (error) {\n  console.error(\"Error parsing user data from localStorage:\", error);\n  user = null;\n}\nconst initial_state = {\n  user: user,\n  loading: false,\n  error: null\n};\n\n// Create context and reducer\nexport const AuthContext = /*#__PURE__*/createContext(initial_state);\nconst AuthReducer = (state, action) => {\n  switch (action.type) {\n    case \"LOGIN_START\":\n      return {\n        user: null,\n        loading: true,\n        error: null\n      };\n    case \"LOGIN_SUCCESS\":\n      // Save user and token to localStorage upon successful login\n      localStorage.setItem('user', JSON.stringify(action.payload.user));\n      localStorage.setItem('accessToken', action.payload.token);\n      // Set token to axios headers\n      setAuthToken(action.payload.token);\n      return {\n        user: action.payload.user,\n        loading: false,\n        error: null\n      };\n    case \"LOGIN_FAILURE\":\n      return {\n        user: null,\n        loading: false,\n        error: action.payload\n      };\n    case \"LOGOUT\":\n      // Remove user and token from localStorage upon logout\n      localStorage.removeItem(\"user\");\n      localStorage.removeItem(\"accessToken\");\n      // Clear token from axios headers\n      setAuthToken(null);\n      return {\n        user: null,\n        loading: false,\n        error: null\n      };\n    default:\n      return state;\n  }\n};\n\n// Create AuthContextProvider component\n_c = AuthReducer;\nexport const AuthContextProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [state, dispatch] = useReducer(AuthReducer, initial_state);\n  useEffect(() => {\n    // Effect to update localStorage whenever user changes\n    localStorage.setItem(\"user\", JSON.stringify(state.user));\n  }, [state.user]);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user: state.user,\n      loading: state.loading,\n      error: state.error,\n      dispatch\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthContextProvider, \"W9QbWx7Z4rctFsX5T1v7mxZp6Nc=\");\n_c2 = AuthContextProvider;\nexport default instance; // Export modified axios instance for use in components\nvar _c, _c2;\n$RefreshReg$(_c, \"AuthReducer\");\n$RefreshReg$(_c2, \"AuthContextProvider\");","map":{"version":3,"names":["React","createContext","useEffect","useReducer","axios","BASE_URL","instance","create","baseURL","headers","setAuthToken","token","defaults","common","localStorage","getItem","user","JSON","parse","error","console","initial_state","loading","AuthContext","AuthReducer","state","action","type","setItem","stringify","payload","removeItem","AuthContextProvider","children","dispatch"],"sources":["C:/Users/aksha/Desktop/Explore India/frontend/src/context/AuthContext.js"],"sourcesContent":["// Import necessary modules\r\nimport React, { createContext, useEffect, useReducer } from \"react\";\r\nimport axios from \"axios\";\r\nimport { BASE_URL } from \"../utils/config\";\r\n\r\n// Set up Axios instance\r\nconst instance = axios.create({\r\n  baseURL: `${BASE_URL}/a`,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Function to set authorization header with token\r\nconst setAuthToken = (token) => {\r\n  if (token) {\r\n    instance.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n  } else {\r\n    delete instance.defaults.headers.common['Authorization'];\r\n  }\r\n};\r\n\r\n// Retrieve token from localStorage and set it to axios headers\r\nconst token = localStorage.getItem('accessToken');\r\nif (token) {\r\n  setAuthToken(token);\r\n}\r\n\r\n// Other constants and variables\r\nlet user;\r\ntry {\r\n  user = JSON.parse(localStorage.getItem(\"user\"));\r\n} catch (error) {\r\n  console.error(\"Error parsing user data from localStorage:\", error);\r\n  user = null;\r\n}\r\n\r\nconst initial_state = {\r\n  user: user,\r\n  loading: false,\r\n  error: null,\r\n};\r\n\r\n// Create context and reducer\r\nexport const AuthContext = createContext(initial_state);\r\n\r\nconst AuthReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"LOGIN_START\":\r\n      return {\r\n        user: null,\r\n        loading: true,\r\n        error: null,\r\n      };\r\n    case \"LOGIN_SUCCESS\":\r\n      // Save user and token to localStorage upon successful login\r\n      localStorage.setItem('user', JSON.stringify(action.payload.user));\r\n      localStorage.setItem('accessToken', action.payload.token);\r\n      // Set token to axios headers\r\n      setAuthToken(action.payload.token);\r\n      return {\r\n        user: action.payload.user,\r\n        loading: false,\r\n        error: null,\r\n      };\r\n    case \"LOGIN_FAILURE\":\r\n      return {\r\n        user: null,\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n    case \"LOGOUT\":\r\n      // Remove user and token from localStorage upon logout\r\n      localStorage.removeItem(\"user\");\r\n      localStorage.removeItem(\"accessToken\");\r\n      // Clear token from axios headers\r\n      setAuthToken(null);\r\n      return {\r\n        user: null,\r\n        loading: false,\r\n        error: null,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// Create AuthContextProvider component\r\nexport const AuthContextProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(AuthReducer, initial_state);\r\n\r\n  useEffect(() => {\r\n    // Effect to update localStorage whenever user changes\r\n    localStorage.setItem(\"user\", JSON.stringify(state.user));\r\n  }, [state.user]);\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        user: state.user,\r\n        loading: state.loading,\r\n        error: state.error,\r\n        dispatch,\r\n      }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default instance; // Export modified axios instance for use in components\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}